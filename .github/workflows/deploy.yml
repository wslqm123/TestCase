# .github/workflows/deploy.yml
name: Build and Deploy Test Cases

on:
  push:
    branches:
      - main
  # 允许手动触发
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 1. Checkout Code
        uses: actions/checkout@v3

      - name: 2. Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 3. Build Test Case Index File
        id: build
        run: |
          # 找出最新的版本目录名，例如 "v1.0.0"
          LATEST_VERSION_DIR_NAME=$(ls -v cases | tail -n 1)
          echo "Latest version found: $LATEST_VERSION_DIR_NAME"
          
          # 执行构建脚本
          node scripts/build.js $LATEST_VERSION_DIR_NAME
          
          # 将版本号设置为一个输出，方便后续步骤使用
          echo "version=${LATEST_VERSION_DIR_NAME}" >> $GITHUB_OUTPUT

      - name: 4. Prepare Deployment Artifact
        run: |
          # 创建一个临时的部署目录，避免混乱
          mkdir deploy_dist
          
          # 复制网页核心文件
          cp -r docs/* deploy_dist/
          
          # 复制测试用例数据
          cp -r cases deploy_dist/
          
          # 复制测试结果数据 (如果存在)
          if [ -d "results" ]; then
            cp -r results deploy_dist/
          fi
          
          # 打印出最终要部署的目录结构以供调试
          echo "--- Content of deployment directory ---"
          ls -R deploy_dist
          echo "-------------------------------------"

      - name: 5. Upload Artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./deploy_dist

      - name: 6. Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2